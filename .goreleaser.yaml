# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

project_name: pipeci

gomod:
  dir: CLI # Set the Go module directory

builds:
  - dir: ./CLI
    main: ./main.go
    binary: pipeci
    id:
      "pipeci"
      # set versioning with tags or other strategies
    # version: { { .Tag } }
    ldflags: "-s -w"
    env:
      - CGO_ENABLED=0
      - GO111MODULE=on
    goos:
      - linux
      - windows
      - darwin

archives:
  - formats: ["tar.gz"]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: ["zip"]

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  # GitHub release information
  github:
    owner: CS6510-SEA-SP25
    name: t3-cicd
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).

brews:
  - name: pipeci
    commit_author:
      name: minh160302
      email: minh160302@gmail.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    directory: Formula
    description: "CLI Program for CI/CD Pipeline execution."
    license: "Unlicense"
    install: |
      bin.install pipeci
    test: |
      system "#{bin}/pipeci --version"
    # Repository to push the generated files to.
    repository:
      owner: CS6510-SEA-SP25
      name: homebrew-pipeci
      branch: main
      token: "{{ .Env.HOMEBREW_TOKEN }}"
